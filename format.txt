Formatting :

Four sections : top, bottom, left, right, for where you want the pins to be.
To start a section, write its name (case-insensitive) with a # in front :
pin descriptions that follow will belong to that section.
Sections can be called multiple times.

Pins can be :
  ground pin
  1 ground pin
So either a name or a number and a name.

Instead of a number, you can also specify an (inclusive) range, like this :
  0-7 I/O
Alternatively, specify a number of pins, like this :
  8x I/O
They'll be numbered and placed automatically. This works counter-clockwise,
starting from the side with the (last) alignment mark.

Automatic numbering and placement works better if you specify the packaging,
like this :
  # package DIP
There are two choices, parallel (`parallel`, `dip`) or square (`square`, `quad`,
`qfp`, `carrier`).

You can specify color. It works like sections :
  # blue
will color everything after it blue. You can use any CSS color name or code.
You can go back to the default color (likely black or white) with `# nocolor`.

You can add an alignment mark to a section by calling `# mark`.
You can also add a corner notch on the left corner of a section with `# notch`.
You can also add a title with `# title`, just write it on the following lines.
Instructions (the things starting with `#`) can be chained with `;`, like this :
  # package DIP ; left ; mark ; blue

It is possible to add formatting to pin names :
  `3 /RESET` will be represented with an overline (active on low).
  `4 <CLK` : `<` adds an arrow going in and `>` one going out
  `7 V_SS` will represent SS as subscript
  `8 10e^15` will represent 15 as superscript
The backslash escapes the special characters :
  `14 V\_SS` will print 'V_SS'
Backslash escaping also works outside of pin names, so you can name a pin
`# Hello` by writing `\# Hello`.


Empty lines and lines starting with `//` (C++ style comments) are ignored.
Instructions (starting with `#`) have their case ignored, and single-word
instructions also ignore whitespace, so `#NOCOLOR` is the same as `# no color`.

A more formal description of the syntax is in the file `reference.md`